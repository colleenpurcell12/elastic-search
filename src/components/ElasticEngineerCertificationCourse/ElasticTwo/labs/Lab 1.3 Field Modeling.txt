Lab 1.3: Field Modeling and the Elastic Common Schema



Lab 1.3: Field Modeling and the Elastic Common Schema

POST version_test/_bulk
{"index":{"_id":1}}
{"version":"5.6.1"}
{"index":{"_id":2}}
{"version":"6.0.0"}
{"index":{"_id":3}}
{"version":"6.8.1"}

GET version_test/_search
{
  "query": {
    "wildcard": {
      "version.keyword": {
        "value": "??6??"
      }
    }
  }
}

GET version_test/_search
{
  "query": {
    "bool": {
      "must": [
        {"match": {
          "version.keyword": "??6??"
        }}
      ]
    }
  }
}

POST version_fixed/_bulk
{"index":{"_id":1}}
{"version":{ "display_name": "5.6.1", "major": 5, "minor": 6, "bugfix": 1}}
{"index":{"_id":2}}
{"version":{ "display_name": "6.0.0", "major": 6, "minor": 0, "bugfix": 0}}
{"index":{"_id":3}}
{"version":{ "display_name": "6.8.1", "major": 6, "minor": 8, "bugfix": 1}}


GET version_fixed/_search
{
  "query": {
    "match": {
      "version.minor": "6"
    }
  }
}

POST loglevel_test1/_doc/
{
  "level": "info"
}

POST loglevel_test2/_doc/
{
  "log_level": "warn"
}


GET loglevel_test1/_search?size=0
{
  "aggs": {
    "top_log_levels": {
      "terms": {
        "field": "level.keyword",
        "size": 1
      }
    }
  }
}

GET loglevel_test2/_search?size=0
{
  "aggs": {
    "top_log_levels": {
      "terms": {
        "field": "log_level.keyword",
        "size": 1
      }
    }
  }
}

do query both at the same time, use a scripted aggregation which are super expensive
GET loglevel*/_search
{
  "size": 0,
  "aggs": {
    "top_levels": {
      "terms": {
       "script": "if (doc.containsKey('level.keyword')) { return doc['level.keyword'].value } else { return doc['log_level.keyword'].value }"
      }
    }
  }
}


PUT blogs
{
  "mappings": {
    "properties": {
      "version": {
        "properties": {
          "display_name": {
            "type": "keyword"
          },
          "major": {
            "type": "byte"
          },
          "minor": {
            "type": "byte"
          },
          "bugfix": {
            "type": "byte"
          }
        }
      }
    }
  }
}

PUT blogs/_doc/1
{
  "version": {
    "display_name": "6.2.1",
    "major": 6,
    "minor": 2,
    "bugfix": 1
  }
}


GET blogs/_search
{
  "query": {
    "bool": {
      "filter": [
        {
          "match": {
            "version.major": 5
          }
        },
        {
          "match": {
            "version.minor": 4
          }
        }
      ]
    }
  }
}

POST logs_server1/_mapping
{
  "properties": {
    "http": {
      "properties": {
        "request": {
          "properties": {
            "method": {
              "type": "alias",
              "path": "method.keyword"
            }
          }
        }
      }
    }
  }
}

GET logs_server1/_search
{
  "size": 0,
  "aggs": {
    "http_methods": {
      "terms": {
        "field": "http.request.method"
      }
    }
  }
}

PUT loglevel_test1/_mappings
{
  "properties": {
    "log": {
      "type": "object",
      "fields": {
        
      }
    }
  }
}

GET loglevel_test2/_search?size=0
{
  "aggs": {
    "top_log_levels": {
      "terms": {
        "field": "log_level.keyword",
        "size": 1
      }
    }
  }
}
